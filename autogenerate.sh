#!/bin/bash

function isolate_minimum_uavcan_dsdl() {
    # We only need the RestartNode DSDL, hence going to the effort to skip
    # all the other DSDL files in the UAVCAN namespace. This will keep the
    # number of autogenerated headers to a minimum
    mkdir -p "${TEMP_DSDL_DIR}/uavcan/protocol"
    cp "${PRJ_DIR}/third-party/DSDL/uavcan/protocol/5.RestartNode.uavcan" \
        "${TEMP_DSDL_DIR}/uavcan/protocol"
}

# Make sure to have the dependencies installed before running this
# pip install empy==3.3.4
# pip install pexpect
function autogenerate_dsdl_source() {
    local DSDLC="${PRJ_DIR}/third-party/dronecan_dsdlc/dronecan_dsdlc.py"
    local OUTPUT_DIR="${TEMP_DSDL_DIR}"

    local NAMESPACE_DIRS="${TEMP_DSDL_DIR}/uavcan ${SCRIPT_DIR}/sine_esc_dsdl/sine_esc"

    python3 "${DSDLC}" -O "${OUTPUT_DIR}" ${NAMESPACE_DIRS}
    local exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "DSDL compiler failed with exit code $exit_code."
        return $exit_code
    fi
    
    echo "DSDL compiler complete"
    return 0
}

function consolidate_dsdl_source() {
    # Copy the autogenerated DSDL source and headers into the src folder
    cp "${TEMP_DSDL_DIR}/include/"*.h "${TEMP_DSDL_DIR}/src/"*.c "${SRC_DIR}/"
    local exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "Failed to move DSDL generated headers, exit code $exit_code."
        return $exit_code
    fi
    
    echo "DSDL generated source copied into to source folder"

    return 0
}

function consolidate_libcanard_source() {
    # Copy all required libcanard source into the src folder
    local LIBCANARD_DIR="${PRJ_DIR}/third-party/libcanard"

    cp -r "${LIBCANARD_DIR}"/*.h "${LIBCANARD_DIR}"/*.c "${SRC_DIR}/"
    local exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "Failed to copy libcanard, exit code $exit_code."
        return $exit_code
    fi

    mkdir -p "${SRC_DIR}/canard"
    cp "${LIBCANARD_DIR}/canard/"*.h "${SRC_DIR}/canard/"
    local exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "Failed to copy libcanard, exit code $exit_code."
        return $exit_code
    fi
    
    echo "libcanard copied into to source folder"

    return 0
}


SCRIPT_DIR="$(dirname "$(realpath "$0")")"
PRJ_DIR="${SCRIPT_DIR}"
DSDL_DIR="${PRJ_DIR}/sine_esc_dsdl"
SRC_DIR="${PRJ_DIR}/src"

# Create a temporary directory for staging everything in. Trap deletes it on exit
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR"' EXIT

TEMP_DSDL_DIR="${TEMP_DIR}/dsdl"
mkdir "${TEMP_DSDL_DIR}"


isolate_minimum_uavcan_dsdl
autogenerate_dsdl_source
consolidate_dsdl_source
consolidate_libcanard_source
